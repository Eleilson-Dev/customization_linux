# Fun√ß√£o para obter a data atual no formato desejado
get_current_date() {
  local current_date
  current_date=$(LC_TIME=en_US.UTF-8 date +'%A/%B/%Y')  # Get the date in the format Day/Month/Year with English output

  echo "$current_date"
}


# Fun√ß√£o para obter a hora atual no formato desejado
get_current_time() {
  local current_time
  current_time=$(date +'%I:%M%p')    # Obt√©m a hora no formato HH:MM

  echo "$current_time"
}

# Fun√ß√£o para verificar o estado do reposit√≥rio Git
git_prompt_info() {
  local branch_name
  branch_name=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)

  if [[ $? -eq 0 ]]; then
    local has_changes
    has_changes=$(git status --porcelain)

    if [[ -n "$has_changes" ]]; then
      echo "üöÄ"
    else
      echo "‚ö°"
    fi
  fi
}

# Fun√ß√£o para verificar se est√° no diret√≥rio raiz do Git (main ou master)
is_git_root_directory() {
  git rev-parse --is-inside-work-tree &>/dev/null
}

is_home_directory() {
  [[ "$PWD" == "$HOME" ]]
}

# Fun√ß√£o para exibir o nome do diret√≥rio atual ou √≠cone do diret√≥rio raiz
current_directory() {
  if is_home_directory; then
    echo "üìÅ"
  else
    echo "%cüìÇ"
  fi
}

# Define o prompt principal com informa√ß√µes b√°sicas
PROMPT='%{$fg[blue]%}%B‚úò %{$fg[yellow]Mxt@DEV:%{$fg[green]%}($(current_directory)%{$fg[green]%})%{$fg[yellow]%} Œª$(if is_git_root_directory; then echo " %{$fg[blue]%}git:%{$fg[red]%}master%{$fg[blue]%}[$(git_prompt_info)%{$fg[blue]%}]";fi) %{$fg[green]%}‚ñå%{$fg[blue]%}$(get_current_time)H %{$fg[red]%}‚óè %{$fg[blue]%}$(get_current_date)%{$fg[green]%}‚ñê%{$reset_color%}%B'$'\n%{$fg[green]%}‚Ü≥ '

# Configura√ß√µes do prompt do Git e Mercurial
ZSH_THEME_GIT_PROMPT_PREFIX="Œª %{$fg[blue]%}git:%{$fg[red]%}"
ZSH_THEME_GIT_PROMPT_SUFFIX="%{$fg[yellow]%}‚Üí %{$reset_color%}"
ZSH_THEME_HG_PROMPT_PREFIX="Œª %{$fg[blue]%}hg %{$fg[red]%}"
ZSH_THEME_HG_PROMPT_SUFFIX="%{$fg[yellow]%} ‚Üí %{$reset_color%}"
